(function() {var implementors = {};
implementors["pyo3"] = [{"text":"impl&lt;'a, T:&nbsp;<a class=\"trait\" href=\"pyo3/pyclass/trait.PyClass.html\" title=\"trait pyo3::pyclass::PyClass\">PyClass</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;&amp;'a <a class=\"struct\" href=\"pyo3/pycell/struct.PyCell.html\" title=\"struct pyo3::pycell::PyCell\">PyCell</a>&lt;T&gt;&gt; for <a class=\"struct\" href=\"pyo3/pycell/struct.PyRef.html\" title=\"struct pyo3::pycell::PyRef\">PyRef</a>&lt;'a, T&gt;","synthetic":false,"types":["pyo3::pycell::PyRef"]},{"text":"impl&lt;'a, T:&nbsp;<a class=\"trait\" href=\"pyo3/pyclass/trait.PyClass.html\" title=\"trait pyo3::pyclass::PyClass\">PyClass</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;&amp;'a <a class=\"struct\" href=\"pyo3/pycell/struct.PyCell.html\" title=\"struct pyo3::pycell::PyCell\">PyCell</a>&lt;T&gt;&gt; for <a class=\"struct\" href=\"pyo3/pycell/struct.PyRefMut.html\" title=\"struct pyo3::pycell::PyRefMut\">PyRefMut</a>&lt;'a, T&gt;","synthetic":false,"types":["pyo3::pycell::PyRefMut"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()